@model System.Data.DataTable
@{
    ViewData["Title"] = "Payment Management";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet" asp-fallback-href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.0/font/bootstrap-icons.min.css" rel="stylesheet" />

<style>
    :root {
        --primary-color: #012970;
        --secondary-color: #899bbd;
        --success-color: #198754;
        --warning-color: #ffc107;
        --danger-color: #dc3545;
        --light-bg: #f6f9ff;
    }

    body {
        background: var(--light-bg);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .page-header {
        background: white;
        padding: 1.5rem 0;
        margin-bottom: 2rem;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        border-radius: 0 0 20px 20px;
    }

    .stats-card {
        background: linear-gradient(135deg, var(--primary-color), #4154f1);
        color: white;
        border-radius: 15px;
        padding: 1.5rem;
        margin-bottom: 1rem;
        box-shadow: 0 4px 24px rgba(65,84,241,0.08);
    }

    .filter-card {
        background: white;
        border-radius: 15px;
        padding: 1.5rem;
        margin-bottom: 2rem;
        box-shadow: 0 5px 15px rgba(0,0,0,0.08);
    }

    .payment-card {
        background: white;
        border-radius: 15px;
        padding: 1.5rem;
        margin-bottom: 1rem;
        box-shadow: 0 5px 15px rgba(0,0,0,0.10);
        border: 1px solid #e0e6ed;
    }

    .status-badge {
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 600;
    }

    .status-paid {
        background: rgba(25, 135, 84, 0.1);
        color: var(--success-color);
    }

    .status-unpaid {
        background: rgba(220, 53, 69, 0.1);
        color: var(--danger-color);
    }

    .status-partial {
        background: rgba(255, 193, 7, 0.1);
        color: var(--warning-color);
    }

    .btn-primary {
        background: var(--primary-color);
        border: none;
        border-radius: 8px;
        padding: 0.6rem 1.5rem;
    }

        .btn-primary:hover, .btn-outline-primary:hover {
            background: #4154f1;
            color: #fff;
        }

    .amount-display {
        font-size: 1.2rem;
        font-weight: bold;
        color: var(--primary-color);
    }

    .patient-info {
        color: var(--secondary-color);
        font-size: 0.9rem;
    }

    .quick-actions {
        display: flex;
        gap: 0.5rem;
    }

        .quick-actions .btn {
            padding: 0.3rem 0.8rem;
            font-size: 0.8rem;
        }

    .hidden {
        display: none !important;
    }
</style>

<div class="page-header">
    <div class="container-fluid">
        <div class="row align-items-center">
            <div class="col-md-6">
                <h1 class="h3 mb-0"><i class="bi bi-credit-card me-2"></i>Payment Management</h1>
                <p class="text-muted mb-0">Manage all billing and payment records</p>
            </div>
            <div class="col-md-6 text-end">
                <a href="@Url.Action("AddEdit", "Billing")" class="btn btn-success me-2">
                    <i class="bi bi-plus-circle me-2"></i>Add New Bill
                </a>
                <button class="btn btn-primary" onclick="window.print()">
                    <i class="bi bi-printer me-2"></i>Print Report
                </button>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <!-- Stats Cards -->
    <div class="row mb-4">
        @{
            decimal totalAmount = 0;
            decimal paidAmount = 0;
            decimal unpaidAmount = 0;
            decimal partialAmount = 0;

            if (Model != null && Model.Rows.Count > 0)
            {
                foreach (System.Data.DataRow row in Model.Rows)
                {
                    var amount = Convert.ToDecimal(row["Amount"]);
                    var status = row["Status"].ToString();

                    totalAmount += amount;
                    if (status == "Paid") paidAmount += amount;
                    else if (status == "Unpaid") unpaidAmount += amount;
                    else if (status == "Partially Paid") partialAmount += amount;
                }
            }
        }

        <div class="col-md-3 col-6">
            <div class="stats-card">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h4 class="mb-0">₹@totalAmount.ToString("N0")</h4>
                        <small>Total Amount</small>
                    </div>
                    <i class="bi bi-currency-rupee fs-2"></i>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-6">
            <div class="stats-card" style="background: linear-gradient(135deg, var(--success-color), #20c997);">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h4 class="mb-0">₹@paidAmount.ToString("N0")</h4>
                        <small>Paid Amount</small>
                    </div>
                    <i class="bi bi-check-circle fs-2"></i>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-6">
            <div class="stats-card" style="background: linear-gradient(135deg, var(--danger-color), #fd7e14);">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h4 class="mb-0">₹@unpaidAmount.ToString("N0")</h4>
                        <small>Unpaid Amount</small>
                    </div>
                    <i class="bi bi-exclamation-circle fs-2"></i>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-6">
            <div class="stats-card" style="background: linear-gradient(135deg, var(--warning-color), #ffc720);">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h4 class="mb-0">₹@partialAmount.ToString("N0")</h4>
                        <small>Partial Amount</small>
                    </div>
                    <i class="bi bi-clock fs-2"></i>
                </div>
            </div>
        </div>
    </div>

    <!-- Simple Search Filter -->
    <div class="filter-card">
        <div class="row g-3">
            <div class="col-md-4">
                <label class="form-label">Search Patient</label>
                <input type="text" class="form-control" id="search" placeholder="Enter patient name..."
                       oninput="filterCards()" autocomplete="off">
            </div>
            <div class="col-md-3">
                <label class="form-label">Status</label>
                <select class="form-select" id="statusFilter" onchange="filterCards()">
                    <option value="">All Status</option>
                    <option value="Paid">Paid</option>
                    <option value="Unpaid">Unpaid</option>
                    <option value="Partially Paid">Partially Paid</option>
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">From Date</label>
                <input type="date" class="form-control" id="fromDate" onchange="filterCards()">
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <button class="btn btn-outline-primary w-100" onclick="clearFilters()">
                    <i class="bi bi-arrow-clockwise"></i> Clear
                </button>
            </div>
        </div>
    </div>

    <!-- Payment List -->
    <div class="row" id="paymentList">
        @if (Model != null && Model.Rows.Count > 0)
        {
            @foreach (System.Data.DataRow row in Model.Rows)
            {
                var statusClass = row["Status"].ToString() == "Paid" ? "status-paid" :
                row["Status"].ToString() == "Unpaid" ? "status-unpaid" : "status-partial";
                var amount = Convert.ToDecimal(row["Amount"]);
                var billingDate = Convert.ToDateTime(row["BillingDate"]);

                <div class="col-md-6 col-lg-4 payment-item"
                     data-patient="@row["PatientName"].ToString().ToLower()"
                     data-status="@row["Status"]"
                     data-date="@billingDate.ToString("yyyy-MM-dd")">
                    <div class="payment-card">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <div>
                                <h5 class="mb-1">@row["PatientName"]</h5>
                                <p class="patient-info mb-0">Bill #@row["BillID"]</p>
                            </div>
                            <span class="status-badge @statusClass">@row["Status"]</span>
                        </div>
                        <div class="amount-display mb-2">₹@amount.ToString("N0")</div>
                        <p class="text-truncate w-100 mb-3">@row["Details"]</p>
                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-muted">
                                <i class="bi bi-calendar me-1"></i>@billingDate.ToString("dd/MM/yyyy")
                            </small>
                            <div class="quick-actions">
                                <a href="@Url.Action("Details", "Billing", new { id = row["BillID"] })"
                                   class="btn btn-outline-primary btn-sm" title="View Details">
                                    <i class="bi bi-eye"></i>
                                </a>
                                <a href="@Url.Action("AddEdit", "Billing", new { id = row["BillID"] })"
                                   class="btn btn-outline-info btn-sm" title="Edit">
                                    <i class="bi bi-pencil"></i>
                                </a>
                                @if (row["Status"].ToString() != "Paid")
                                {
                                    <form method="post" action="@Url.Action("UpdateStatus", "Billing")"
                                          style="display:inline;" onsubmit="return confirm('Mark as Paid?')">
                                        <input type="hidden" name="billId" value="@row["BillID"]" />
                                        <input type="hidden" name="status" value="Paid" />
                                        <button type="submit" class="btn btn-outline-success btn-sm" title="Mark as Paid">
                                            <i class="bi bi-check"></i>
                                        </button>
                                    </form>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="text-center py-5">
                    <i class="bi bi-inbox fs-1 text-muted"></i>
                    <h4 class="mt-3 text-muted">No payments found</h4>
                    <p class="text-muted">Start by adding a new billing record.</p>
                    <a href="@Url.Action("AddEdit", "Billing")" class="btn btn-primary">
                        <i class="bi bi-plus-circle me-2"></i>Add New Bill
                    </a>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Minimal JavaScript for filtering
        function filterCards() {
            const search = document.getElementById('search').value.toLowerCase();
            const status = document.getElementById('statusFilter').value;
            const fromDate = document.getElementById('fromDate').value;
            const items = document.querySelectorAll('.payment-item');

            items.forEach(item => {
                const patient = item.dataset.patient;
                const itemStatus = item.dataset.status;
                const itemDate = item.dataset.date;

                const matchesSearch = !search || patient.includes(search);
                const matchesStatus = !status || itemStatus === status;
                const matchesDate = !fromDate || itemDate >= fromDate;

                item.classList.toggle('hidden', !(matchesSearch && matchesStatus && matchesDate));
            });
        }

        function clearFilters() {
            document.getElementById('search').value = '';
            document.getElementById('statusFilter').value = '';
            document.getElementById('fromDate').value = '';
            document.querySelectorAll('.payment-item').forEach(item => item.classList.remove('hidden'));
        }
    </script>
}